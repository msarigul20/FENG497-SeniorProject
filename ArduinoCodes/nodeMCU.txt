//NODEmCU node 
//led workin on nnode on and off 
//water sensor is on nodeMCU
//DHT11 NODE is on nodeMCU
#include <ESP8266WiFi.h>
#include <DHT.h> // dht11 kütüphanesini ekliyoruz.
const char* ssid = "proje";
const char* password =  "aaaa1234";
WiFiServer wifiServer(6897);
#define DHTPIN D2 // DHT11PIN olarak Dijital 2"yi belirliyoruz.
#define DHTTYPE DHT11   // DHT 11 
DHT dht = DHT(DHTPIN, DHTTYPE);

void setup() {/////////////////////////////////////////
  dht.begin();
  //setup for led
  pinMode(D1, OUTPUT);
  Serial.begin(115200);
  delay(1000);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println(".Connecting to WiFi..");
  }
  Serial.println("Connected to the WiFi network");
  Serial.println(WiFi.localIP());
  wifiServer.begin();


}//////////////////////////////////////////////////////
void loop() //*******************************************
{
  int data;
  WiFiClient client = wifiServer.available();
  if (client) {
    while (client.connected()) {
      while (client.available() > 0) {
        char c = client.read();
        char a = 'a';
        char x = 'x';
        char z = 'z';
        char d = 'd';
        char h = 'h';
        Serial.println(c);
        if (c == a) {
          Serial.println("**********************************");
          Serial.print("Came from client to respond by server for gas : ");
          Serial.println(c);
          int data = analogRead(A0);
          Serial.print("CO VALUES: ");
          Serial.println(data);
          client.print(data);
        }
        if (c == x) {
          Serial.println("**********************************");
          Serial.print("Came from client to respond by server for openning led : ");
          Serial.println(c);
          digitalWrite(D1, HIGH);
          Serial.println("LED OPENNED");
          client.print("ON");
        }
        if (c == z) {
          Serial.println("**********************************");
          Serial.print("Came from client to respond by server for openning led : ");
          Serial.println(c);
          digitalWrite(D1, LOW);
          Serial.println("LED CLOSED");
          client.print("OFF");
        }
        if (c == d) {
          Serial.println("**********************************");
          Serial.print("Came from client to respond by server for Temperature : ");
          Serial.println(c);
          delay(2000);
          float t = dht.readTemperature();
          Serial.print("Temperaure VALUE: ");
          Serial.println(t);
          String tString =String(t);
          client.print(tString);
        }
        if (c == h) {
          Serial.println("**********************************");
          Serial.print("Came from client to respond by server for HUMMUDITY : ");
          Serial.println(c);
          delay(2000);
          float h= dht.readHumidity();
          Serial.print("Humidity VALUE: ");
          Serial.println(h);
          String hString =String(h);
          client.print(hString);
        }
      }
    }
    client.stop();
    Serial.println("Client disconnected");
  }
}//***************************************************************