//wemos node
//gas sensor and its servo
//flame sensor and its buzzer

#include <ESP8266WiFi.h>
#include<Servo.h>
const char* ssid = "proje";
const char* password =  "aaaa1234";
WiFiServer wifiServer(6896);
int flame_sensor = 4 ;
Servo engine;
void setup() {/////////////////////////////////////////
  pinMode(D3, OUTPUT);//FLAME LED
  //pinMode(D5, OUTPUT);//GAS LED
  engine.attach(D5);
  Serial.begin(115200);
  delay(1000);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
  Serial.println("Connected to the WiFi network");
  Serial.println(WiFi.localIP());
  wifiServer.begin();
  pinMode(flame_sensor, INPUT) ;

}//////////////////////////////////////////////////////
void loop() //*******************************************
{
  int data;
  WiFiClient client = wifiServer.available();
  if (client) {
    while (client.connected()) {
      while (client.available() > 0) {
        char c = client.read();
        char w = 'w' ;
        char f = 'f';
        Serial.println(c);
        if (c == w) {
          Serial.println("**********************************");
          Serial.print("Came from client to respond by server for CO : ");
          Serial.println(c);
          int data = analogRead(A0);
          if (data > 500) {           
            engine.write(360);
          }
          else {
            engine.write(90);
            Serial.println("servo elsedeyim.");
          }
          Serial.print("CO VALUE: ");
          Serial.println(data);
          client.print(data);
        }
        if (c == f) {
          Serial.println("**********************************");
          Serial.print("Came from client to respond by server for flame : ");
          Serial.println(c);
          int data1 = digitalRead(flame_sensor) ;
          if (data1 == 0) {
            tone(D6, 1000);
          }
          else {
            noTone(D6);
          }
          Serial.print("FLAME VALUE: ");
          Serial.println(data1);
          client.print(data1);
        }
      }
    }
    client.stop();
    Serial.println("Client disconnected");
  }
}//***************************************************************